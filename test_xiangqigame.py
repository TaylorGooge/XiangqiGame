import copy
from baseclasses import Piece, Error, InvalidMoveError
from general import General
from chariot import Chariot
from horse import Horse
from elephant import Elephant
from advisor import Advisor
from cannon import Cannon
from soldier import Soldier
from xiangqigame import XiangqiGame
import unittest

class KnownValues(unittest.TestCase):

    def test_game_1(self):
        # black winning game
        game = XiangqiGame()
        game.make_move("c1", "e3")
        game.make_move("b8", "d8")
        game.make_move("g4", "g5")
        game.make_move("b10", "c8")
        game.make_move("c4", "c5")
        game.make_move("a10", "b10")
        game.make_move("a1", "a2")
        game.make_move("b10", "b3")
        game.make_move("h3", "b3")
        game.make_move("h10", "g8")
        game.make_move("a2", "d2")
        game.make_move("i10", "i9")
        game.make_move("i1", "i3")
        game.make_move("i9", "b9")
        game.make_move("b3", "b2")
        game.make_move("c7", "c6")
        game.make_move("c5", "c6")
        game.make_move("c8", "d6")
        game.make_move("d2", "d6")
        game.make_move("b9", "b2")
        game.make_move("g5", "g6")
        game.make_move("g7", "g6")
        game.make_move("d6", "g6")
        game.make_move("c10", "e8")
        game.make_move("g6", "d6")
        game.make_move("d10", "e9")
        game.make_move("i3", "h3")
        game.make_move("h8", "h1")
        game.make_move("h3", "h1")
        game.make_move("b2", "b1")
        game.make_move("h1", "h7")
        game.make_move("b1", "b4")
        game.make_move("e4", "e5")
        game.make_move("b4", "i4")
        game.make_move("c6", "c7")
        game.make_move("i4", "c4")
        game.make_move("d6", "d7")
        game.make_move("g8", "f6")
        game.make_move("h7", "e7")
        game.make_move("f6", "d7")
        game.make_move("c7", "d7")
        game.make_move("d8", "b8")
        game.make_move("e5", "e6")
        game.make_move("c4", "c6")
        game.make_move("g1", "i3")
        game.make_move("b8", "b4")
        game.make_move("f1", "e2")
        game.make_move("b4", "b1")
        game.make_move("e3", "c1")
        game.make_move("c6", "c1")
        game.make_move("e7", "f7")
        game.make_move("c1", "c2")
        self.assertEqual(game.get_game_state()== "BLACK_WON", True)
    #
    # def test_game_2(self):
    # # black winning game
    #     game = XiangqiGame()
    #     game.make_move("h3","e3")
    #     game.make_move("b10","c8")
    #     game.make_move("h1","g3")
    #     game.make_move("h8","f8")
    #     game.make_move("c4","c5")
    #     game.make_move("h10","g8")
    #     game.make_move("i1","h1")
    #     game.make_move("g7","g6")
    #     game.make_move("b3","d3")
    #     game.make_move("i10","i9")
    #     game.make_move("b1","a3")
    #     game.make_move("i9","d9")
    #     game.make_move("d1","e2")
    #     game.make_move("b8","a8")
    #     game.make_move("a1","b1")
    #     game.make_move("d9","d5")
    #     game.make_move("b1","b7")
    #     game.make_move("d5","c5")
    #     game.make_move("b7","b1")
    #     game.make_move("a8","a4")
    #     game.make_move("h1","h4")
    #     game.make_move("g8","f6")
    #     game.make_move("h4","h6")
    #     game.make_move("a4","g4")
    #     game.make_move("g1","i3")
    #     game.make_move("c10","e8")
    #     game.make_move("a3","b5")
    #     game.make_move("a10","b10")
    #     game.make_move("h6","h8")
    #     game.make_move("f10","e9")
    #     game.make_move("h8","h7")
    #     game.make_move("f6","d5")
    #     game.make_move("h7","h4")
    #     game.make_move("f8","g8")
    #     game.make_move("d3","d10")
    #     game.make_move("e10","d10")
    #     game.make_move("e3","d3")
    #     game.make_move("d5","f4")
    #     game.make_move("d3","d4")
    #     game.make_move("b10","b5")
    #     game.make_move("b1","b5")
    #     game.make_move("c5","c1")
    #     game.make_move("d4","d1")
    #     game.make_move("f4","g2")
    #     self.assertEqual(game.get_game_state()== "BLACK_WON", True)

    def test_game_3(self):
        # red winning
        game = XiangqiGame()
        game.make_move("h3","e3")
        game.make_move("h10","g8")
        game.make_move("h1","g3")
        game.make_move("i10","h10")
        game.make_move("i1","h1")
        game.make_move("b10","c8")
        game.make_move("c4","c5")
        game.make_move("g7","g6")
        game.make_move("h1","h8")
        game.make_move("h10","h8")
        game.make_move("b1","c3")
        game.make_move("g8","f6")
        game.make_move("a1","a2")
        game.make_move("h8","h6")
        game.make_move("b3","b6")
        game.make_move("a10","a9")
        game.make_move("a2","f2")
        game.make_move("a9","f9")
        game.make_move("c3","d5")
        game.make_move("h6","h5")
        game.make_move("b6","b5")
        game.make_move("c7","c6")
        game.make_move("d5","e7")
        game.make_move("c8","e7")
        game.make_move("b5","h5")
        game.make_move("g6","g5")
        game.make_move("g4","g5")
        game.make_move("b8","g8")
        game.make_move("g5","g6")
        game.make_move("g8","g3")
        game.make_move("e3","e7")
        game.make_move("f9","f7")
        game.make_move("h5","e5")
        self.assertEqual(game.get_game_state()== "RED_WON", True)


    def test_game_4(self):

        #black wins
        game = XiangqiGame()
        game.make_move("c4", "c5")
        game.make_move("c10", "e8")
        game.make_move("b1", "c3")
        game.make_move("g7", "g6")
        game.make_move("b3", "a3")
        game.make_move("b10", "c8")
        game.make_move("a1", "b1")
        game.make_move("a10", "b10")
        game.make_move("h1", "g3")
        game.make_move("h10", "g8")
        game.make_move("b1", "b7")
        game.make_move("i10", "i9")
        game.make_move("h3", "h7")
        game.make_move("g8", "h6")
        game.make_move("h7", "c7")
        game.make_move("i9", "h9")
        game.make_move("c7", "a7")
        game.make_move("d10", "e9")
        game.make_move("c5", "c6")
        game.make_move("e8", "c6")
        game.make_move("i1", "i2")
        game.make_move("h8", "h7")
        game.make_move("b7", "e7")
        game.make_move("c8", "e7")
        game.make_move("i2", "f2")
        game.make_move("h7", "a7")
        game.make_move("a3", "a7")
        game.make_move("b8", "c8")
        game.make_move("f2", "f10")
        game.make_move("e9", "f10")
        game.make_move("c3", "e2")
        game.make_move("b10", "d10")
        game.make_move("e4", "e5")
        game.make_move("h9", "d9")
        game.make_move("e2", "c3")
        game.make_move("c8", "c3")
        game.make_move("f1", "e2")
        game.make_move("e7", "d5")
        game.make_move("g3", "e4")
        game.make_move("d5", "b4")
        game.make_move("a7", "f7")
        game.make_move("b4", "c2")
        game.make_move("e1","f1")
        game.make_move("d9","f9")
        game.make_move("e5","e6")
        game.make_move("f9","f7")
        game.make_move("e6","f6")
        game.make_move("c3","c1")
        game.make_move("f1","f2")
        game.make_move("h6","g4")
        game.make_move("e4","g3")
        game.make_move("f7","f6")
        game.make_move("e2","f3")
        game.make_move("d10","d2")
        game.make_move("d1","e2")
        game.make_move("d2","e2")
        game.make_move("f2","f1")
        game.make_move("f6","f3")
        self.assertEqual(game.get_game_state()== "BLACK_WON", True)
